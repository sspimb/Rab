---
- name: Include all default extension files in vars/all and all nested directories
  include_vars: 'main.yml'

# add the pyhton package for ansilbel if not there already ..

#- name: Install libselinux-python
#  yum:
#    name: "{{ item }}"
#    state: present
#    state: latest
#    update_cache: yes
#  with_items:
#         - libselinux-python


# add group
- name: Add the ansible group
  group:
    gid: "{{ gid }}"
    name: "{{ user }}"
    state: present

# add user

- name: Add the ansible user and set passwd
  user:
    uid: "{{ uid }}"
    name: "{{ user }}"
    state: present
    group: "{{ user }}"
    password: $6$T0bUgrEZe$KfnJqbiG0rDf8fZ84E5QTB7HNJp8N6ddrPBfcilMQGIKLyB6P8RiLlNZ/fK.GzpzvW28h6yVySjPrTbeANtA10
    home: /opt/ansible
    update_password: always

# if user exists then reset the passwd back to the orginal above - just in case.can only be run with --tags reset_ansible_password from command line

- name: This is the Tagged task - reset tha ansible user's passwd
  user:
   name: "{{ user }}"
   update_password: always
   password: $6$T0bUgrEZe$KfnJqbiG0rDf8fZ84E5QTB7HNJp8N6ddrPBfcilMQGIKLyB6P8RiLlNZ/fK.GzpzvW28h6yVySjPrTbeANtA10
  tags: [ 'reset_ansible_password']

- name: reset ansible password 
  tags: [ 'reset_ansible_password']
  shell: echo "change passwd for existing ansible user"

# also add ansible into sudoers file even if the admin group is included. No simple way to check this without greping, checking return codes etc.

- name: Add ansible user to the sudoers file ..
  lineinfile:
    path: /etc/sudoers
    state: present
    line: '{{ user }}	ALL=(ALL) ALL'
#    validate: 'visudo -cf %s'

- name: Create ansible .ssh directory
  file:
   path: /opt/ansible/.ssh
   state: directory
   owner: "{{ user }}"
   group: "{{ user }}"
   mode: 0755

- name:  Copy authorized keys file for passwdless login .
  copy: 
   src : authorized_keys 
   dest: /opt/ansible/.ssh
   owner: "{{ user }}"
   group: "{{ user }}"
   mode : 0600
