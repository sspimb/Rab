---
- name: roles to install ldap clients ,vars in /opt/ansible/production/group_vars/all/ 
  include_vars: 'main.yml'

# Create the iptables rules to allow DNS loookup, external http access for apt-get,changes to hosts file etc.We include another set of tasks for this as it is 
# outside of a normal client install

- include: extras.yml

# remove all packages if tag set

- name: remove all the client packages libnss-ldap,ldap-utils,nscd,libpam-ldap
  environment:
    DEBIAN_FRONTEND: noninteractive
    PATH: "{{ rootpath }}"
  apt:
    name:  "{{ item }}"
    state: absent
    purge: yes
    update_cache: yes
    force: yes
  with_items:
         - ldap-utils
         - libpam-ldap
         - libnss-ldap
         - nscd
  tags: ['remove_all_packages']

- name: remove libnss-ldap,ldap-utils,nscd,libpam-ldap packages
  tags: ['remove_all_packages']
  shell: echo "removing all ldap client packages"

- include: cleanusers.yml

# remove local user account and groups

- name: remove local accounts and groups
  user:
    name: "{{ item }}"
    state: absent
    remove: yes
  with_items: "{{ userlist  }}"
  ignore_errors: yes

# Install required packages

- name: Install all the client packages ldap-utils,libpam-ldap,libnss-ldap,nscd
  environment:
    DEBIAN_FRONTEND: noninteractive
    PATH: "{{ rootpath }}" 
  apt:
    name: "{{ item }}"
    state: present
    install_recommends: no
    state: latest
    force: yes
   # update_cache: yes
  with_items:
         - ldap-utils
         - libpam-ldap
         - libnss-ldap
         - nscd

# adjust client iptable to allow port 389 traffic

- name: insert the ldap iptables rule
  iptables:
    action : insert
    chain: OUTPUT
    ctstate : NEW,RELATED,ESTABLISHED
    destination: "{{ ldap01 }}"
    jump: ACCEPT
    protocol: tcp
    match: tcp
    destination_port: "{{ port }}"
    comment: Allow production LDAP traffic

- name: insert the ldap iptables rule
  iptables:
    action : insert
    chain: OUTPUT
    ctstate : NEW,RELATED,ESTABLISHED
    destination: "{{ ldap02 }}"
    jump: ACCEPT
    protocol: tcp
    match: tcp
    destination_port: "{{ port }}"
    comment: Allow production LDAP traffic

# save iptables changes to be re-applied if server rebooted - can be in more than on location

# is it  /etc/iptables-save

- name: check if iptables-save exists in  /etc ... 
  stat:
   path: /etc/iptables-save
  register: iptabs 

- name: Save iptables rules in /etc/ ... 
  shell: /sbin/iptables-save > /etc/iptables-save
  when: iptabs.stat.exists 

# is it /etc/iptables/iptables-conf

- name: check if iptables-conf exists  in  /etc/iptables ... 
  stat:
   path: /etc/iptables/iptables-conf
  register: iptabsalt 

- name: Save iptables rules in /etc/iptables/... 
  shell: /sbin/iptables-save > /etc/iptables/iptables-conf
  when: iptabsalt.stat.exists 

# is it /etc/iptables/iptables.conf

- name: check if iptables.conf exists  in  /etc/iptables ... 
  stat:
   path: /etc/iptables/iptables.conf
  register: iptabsalt 

- name: Save iptables rules in /etc/iptables/... 
  shell: /sbin/iptables-save > /etc/iptables/iptables.conf
  when: iptabsalt.stat.exists 

# Create dirs,copy files and templates

- name: Create directory /etc/ldap
  file:
   path: /etc/ldap
   state: directory
   owner: root
   group: root
   mode: 0755

- name: Copy Template file ldap.conf
  template: 
   src : ldap.conf.j2
   dest: /etc/ldap/ldap.conf
   owner: root
   group: root
   mode : 0644
   backup: yes

- name: Copy Template files  libnss-ldap,pam_ldap
  template: 
   src : "{{ item }}" 
   dest: /etc/{{ item | basename | regex_replace('.j2','') }}
   owner: root
   group: root
   mode : 0644
   backup: yes
  with_items:
    - libnss-ldap.conf.j2
    - pam_ldap.conf.j2


- name:  Copy file nsswitch.conf
  copy: 
   src : nsswitch.conf
   dest: /etc/nsswitch.conf
   owner: root
   group: root
   mode : 0644
   backup: yes

- name:  Copy all pam module files
  copy: 
   src : "{{ item }}"
   dest: /etc/pam.d/{{ item }}
   owner: root
   group: root
   mode : 0644
   backup: yes
  with_items:
    - common-auth
    - common-password
    - common-session
    - common-account
    - common-session-noninteractive
  notify: Restart nscd
- name: force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers


# name: Fix permissions on home directories to pick up the uid/gid from ldap

- name: Fix permissions on home directories to pick up the uid/gid from ldap
  file: dest=/home/{{ item }} owner={{ item }} group={{ item }} state=directory recurse=yes
  with_items: "{{ userlist }}"
